# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  imageRepo: sampleapp
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'sam-acr'
        command: 'login'
    - task: Docker@2
      displayName: Build and push image
      inputs:
        containerRegistry: 'sam-acr'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/app/Dockerfile'
        tags: |
          $(tag)
          latest
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'my-manifest'
        publishLocation: 'pipeline'

- stage: Deploy
  displayName: Deploy the app
  dependsOn: Build
  jobs:
   - job: Deploy
     displayName: Deploy to minkube
     variables:
       dockersecret: dockerhub-secret
     pool:
      vmImage: ubuntu-latest
     steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'my-manifest'
          targetPath: '$(Pipeline.Workspace)/my-manifest'
      - task: KubernetesManifest@0
        inputs:
          action: 'createSecret'
          kubernetesServiceConnection: 'minkube'
          namespace: 'default'
          secretType: 'dockerRegistry'
          secretName: '$(dockersecret)'
          dockerRegistryEndpoint: 'sam-acr'
      - task: KubernetesManifest@0
        inputs:
          action: 'deploy'
          kubernetesServiceConnection: 'minkube'
          namespace: 'default'
          manifests: |
            $(Pipeline.Workspace)/my-manifest/deployment.yaml
            $(Pipeline.Workspace)/my-manifest/service.yaml
      
       