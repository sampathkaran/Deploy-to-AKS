# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  imageRepo: sampleapp
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    # - task: Docker@2
    #   inputs:
    #     containerRegistry: 'sam-acr'
    #     command: 'login'
    - task: Docker@2
      displayName: Build and push image
      inputs:
        containerRegistry: 'sam-acr'
        repository: 'sampathkaran/$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/app/Dockerfile'
        tags: |
          $(tag)
          latest
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'manifests'
        publishLocation: 'pipeline'

- stage: Deploy
  displayName: Deploy the app
  dependsOn: Build
  jobs:
   - deployment: Deploy
     displayName: Deploy to minkube
     environment: 'k8s-dev.default'
     variables:
       dockersecret: dockerhub-secret
     pool:
      vmImage: ubuntu-latest
      strategy: 
       runOnce:
        deploy:
           steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                artifactName: 'manifests'
                targetPath: '$(Pipeline.Workspace)/manifests'
            # - task: KubernetesManifest@0
            #   inputs:
            #     action: 'createSecret'
            #     kubernetesServiceConnection: 'minkube'
            #     namespace: 'default'
            #     secretType: 'dockerRegistry'
            #     secretName: '$(dockersecret)'
            #     dockerRegistryEndpoint: 'sam-acr'
            - task: KubernetesManifest@0
              inputs:
                action: 'deploy'
                namespace: 'default'
                manifests: |
                  $(Pipeline.Workspace)/manifests/deployment.yml
                  $(Pipeline.Workspace)/manifests/service.yml
      
       